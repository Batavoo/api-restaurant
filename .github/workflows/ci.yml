name: CI/CD - Restaurant Management API

on:
  pull_request:
    branches: [main, develop]

jobs:
  notify-fail:
    runs-on: ubuntu-latest
    if: failure()
    needs: [check, test, build, sonar-analyze]
    steps:
      - name: üì£ Fail discord notification
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          username: 'fulano triste'
          avatar-url: 'https://media.discordapp.net/attachments/1413674985263730709/1413677177345413171/image0.jpg?ex=68bcccf7&is=68bb7b77&hm=13bdc8f5aab111255c822cd1a973b25a6e1835d73b825256b8f5e586829cd847&=&format=webp&width=765&height=930'
          embed-title: 'Deploy DEV'
          embed-description: '‚ùå Falha ao fazer deploy da api em DEV! oh c√©us...'
          embed-color: 14553088
          embed-thumbnail-url: 'https://e7.pngegg.com/pngimages/834/472/png-clipart-google-cloud-icon-google-cloud-platform-cloud-computing-amazon-web-services-virtual-private-cloud-cloud-computing-text-trademark.png'
          embed-author-name: 'Github Actions'
          embed-author-icon-url: 'https://cdn-icons-png.flaticon.com/512/25/25231.png'
          embed-footer-text: 'URL da execu√ß√£o: ${{ env.ACTION_LINK }}'
          embed-footer-icon-url: 'https://cdn-icons-png.flaticon.com/512/25/25231.png'

  notify-success:
    runs-on: ubuntu-latest
    if: success()
    needs: [check, test, build, sonar-analyze]
    steps:
      - name: üì£ Success discord notification
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          username: 'fulano'
          avatar-url: 'https://cdn.discordapp.com/attachments/1413674985263730709/1413675018742923345/3bf.jpg?ex=68bccaf5&is=68bb7975&hm=d05cc7dc1c4c16fdb2c96f147e84d59a81eb5141479779e6b584ae32ad1261d7&'
          embed-title: 'Deploy DEV'
          embed-description: '‚úÖ O Deploy da api em DEV foi realizado com sucesso! eba üéâ'
          embed-color: 2067276
          embed-thumbnail-url: 'https://e7.pngegg.com/pngimages/834/472/png-clipart-google-cloud-icon-google-cloud-platform-cloud-computing-amazon-web-services-virtual-private-cloud-cloud-computing-text-trademark.png'
          embed-author-name: 'Github Actions'
          embed-author-icon-url: 'https://cdn-icons-png.flaticon.com/512/25/25231.png'
          embed-footer-text: 'URL da api: ${{ needs.deploy.outputs.service_url }}'
          embed-footer-icon-url: 'https://cdn-icons-png.flaticon.com/512/25/25231.png'

  sonar-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout do c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üü¢ Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: üì¶ Instalar depend√™ncias
        run: npm install

      - name: ‚úÖ Rodar testes e gerar cobertura
        run: npm run test:coverage

      - name: üîçÔ∏è Sonar scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Comentando pra n√£o ficar dando erro
      - name: üö© Sonar quality gate
        uses: SonarSource/sonarqube-quality-gate-action@v1
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Adicionar essa na de PR de DEV para PROD
  # integration:
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - name: üì• Verificar branches conflitantes
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #
  #     - name: üîë Configurar credenciais do Git
  #       run: |
  #         git config user.name "github-actions[bot]"
  #         git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
  #     - name: üîç Testar merge main <- develop
  #       run: |
  #         git fetch origin
  #         git checkout main
  #         git merge --no-commit --no-ff origin/develop || (
  #           echo "‚ùå Conflitos detectados entre main e develop" && exit 1
  #         )
  #         git merge --abort || true
  #         echo "‚úÖ Nenhum conflito entre main e develop"
  check:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: üü¢ Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: üì¶ Instalar depend√™ncias
        run: npm install

      - name: ‚úÖ Checar padr√£o de c√≥digo
        run: npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: üü¢ Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: üì¶ Instalar depend√™ncias
        run: npm install

      - name: ‚úÖ Rodar testes
        run: npm test

  build:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: üü¢ Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: üì¶ Instalar depend√™ncias
        run: npm install

      - name: üöÄ Build do projeto
        run: npm run build
