name: CI/CD - Restaurant Management API

on:
  push:
    branches: [ main, develop, feature/add-cloud-run-iac ]
  pull_request:
    branches: [main, develop]

jobs:
  notify-fail:
    runs-on: ubuntu-latest
    if: failure()
    needs: [check, test, build, sonar-analyze]
    steps:
      - name: 📣 Fail discord notification
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          username: 'fulano triste'
          avatar-url: 'https://media.discordapp.net/attachments/1413674985263730709/1413677177345413171/image0.jpg?ex=68bcccf7&is=68bb7b77&hm=13bdc8f5aab111255c822cd1a973b25a6e1835d73b825256b8f5e586829cd847&=&format=webp&width=765&height=930'
          embed-title: 'Pipeline CI'
          embed-description: '❌ Pipeline falhou! affs...'
          embed-color: 14553088
          embed-thumbnail-url: 'https://media.discordapp.net/attachments/1413674985263730709/1413675507714887771/image0.jpg?ex=68bccb69&is=68bb79e9&hm=c1697b707e5afd5f4526467b135516ff06a76da633e6bc03224faf4ceaff77aa&=&format=webp&width=365&height=402'
          embed-author-name: 'Github Actions'
          embed-author-icon-url: 'https://cdn-icons-png.flaticon.com/512/25/25231.png'

  notify-success:
    runs-on: ubuntu-latest
    if: success()
    needs: [check, test, build, sonar-analyze]
    steps:
      - name: 📣 Success discord notification
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          username: 'fulano'
          avatar-url: 'https://cdn.discordapp.com/attachments/1413674985263730709/1413675018742923345/3bf.jpg?ex=68bccaf5&is=68bb7975&hm=d05cc7dc1c4c16fdb2c96f147e84d59a81eb5141479779e6b584ae32ad1261d7&'
          embed-title: 'Pipeline CI'
          embed-description: '✅ Pipeline concluída com sucesso! eba 🎉'
          embed-color: 2067276
          embed-thumbnail-url: 'https://media.discordapp.net/attachments/1413674985263730709/1413675507714887771/image0.jpg?ex=68bccb69&is=68bb79e9&hm=c1697b707e5afd5f4526467b135516ff06a76da633e6bc03224faf4ceaff77aa&=&format=webp&width=365&height=402'
          embed-author-name: 'Github Actions'
          embed-author-icon-url: 'https://cdn-icons-png.flaticon.com/512/25/25231.png'

  sonar-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: 📦 Instalar dependências
        run: npm install

      - name: ✅ Rodar testes e gerar cobertura
        run: npm run test:coverage

      - name: 🔍️ Sonar scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Comentando pra não ficar dando erro
      # - name: 🚩 Sonar quality gate
      #   uses: SonarSource/sonarqube-quality-gate-action@v1
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Adicionar essa na de PR de DEV para PROD
  # integration:
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - name: 📥 Verificar branches conflitantes
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #
  #     - name: 🔑 Configurar credenciais do Git
  #       run: |
  #         git config user.name "github-actions[bot]"
  #         git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
  #     - name: 🔍 Testar merge main <- develop
  #       run: |
  #         git fetch origin
  #         git checkout main
  #         git merge --no-commit --no-ff origin/develop || (
  #           echo "❌ Conflitos detectados entre main e develop" && exit 1
  #         )
  #         git merge --abort || true
  #         echo "✅ Nenhum conflito entre main e develop"
  check:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      - name: 🟢 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: 📦 Instalar dependências
        run: npm install

      - name: ✅ Checar padrão de código
        run: npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      - name: 🟢 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: 📦 Instalar dependências
        run: npm install

      - name: ✅ Rodar testes
        run: npm test

  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      - name: 🟢 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: 📦 Instalar dependências
        run: npm install

      - name: 🚀 Build do projeto
        run: npm run build

  deploy-dev:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      - name: 🔐 Autenticar com o Google Cloud
        uses: google-github-actions/auth@v3
        with:
          project_id: pede-ja-api
          workload_identity_provider: projects/560057939373/locations/global/workloadIdentityPools/github-wif-pool/providers/github-wif-provider

    #   - name: 📦 Instalar dependências
    #     run: npm install

      # - name: ☁️ Deploy para Google Cloud Run
      #   run: |
      #     gcloud run deploy api-restaurant \
      #       --source . \
      #       --region us-central1 \
      #       --platform managed \
      #       --allow-unauthenticated \
      #       --set-env-vars NODE_ENV=production,PORT=8080,DATABASE_URL=${{ secrets.DATABASE_URL }},JWT_SECRET=${{ secrets.JWT_SECRET }},API_KEY=${{ secrets.API_KEY }} \
      #       --memory 512Mi \
      #       --timeout 300s
